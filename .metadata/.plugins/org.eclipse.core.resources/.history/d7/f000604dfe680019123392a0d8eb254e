package com.bdd.hooks;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.testng.ITestContext;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.ChartLocation;
import com.aventstack.extentreports.reporter.configuration.Theme;
import com.bdd.Reporting.Reporter;
import com.bdd.framework.utility.BaseUtilities;

import cucumber.api.Scenario;
import cucumber.api.java.After;
import cucumber.api.java.Before;

public class Hooks {
	Reporter r;

	
	public ExtentHtmlReporter htmlReporter;
	public ExtentReports extent;
	public ExtentTest logger;
	
	@After
	public void onStart(ITestContext testContext)
	{
		String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());//time stamp
		String repName="Test-Report-"+timeStamp+".html";
		
		htmlReporter=new ExtentHtmlReporter(System.getProperty("user.dir")+"/Results/"+repName+".html");//specify location of the report
		htmlReporter.loadXMLConfig(System.getProperty("user.dir")+ "/extent-config.xml");
		
		extent=new ExtentReports();
		
		extent.attachReporter(htmlReporter);
		extent.setSystemInfo("Host name","localhost");
		extent.setSystemInfo("Environemnt","QA");
		extent.setSystemInfo("user","pavan");
		
		htmlReporter.config().setDocumentTitle("InetBanking Test Project"); // Tile of report
		htmlReporter.config().setReportName("Functional Test Automation Report"); // name of the report
		htmlReporter.config().setTestViewChartLocation(ChartLocation.TOP); //location of the chart
		htmlReporter.config().setTheme(Theme.DARK);
		
		System.out.println("After class");
	}
	
	
	
	@Before
	public void Before(Scenario sc) {
	
		BaseUtilities.InitilizeDriverSetup();
		
		System.out.println("***************Before Scenario executed*****************");
		
	}

	public void embedScreenshot(Scenario scenario) {
		System.out.println("Name of the Feature:" + scenario.getId());
		System.out.println("Name of the Scenario :" + scenario.getName());
		System.out.println("Status of the feature :" + scenario.getStatus());
		System.out.println("Status of the feature :" + scenario.getSourceTagNames());

	}

	public void tearDown(Scenario scenario) throws IOException {

		if (scenario.getStatus() == "passed") {
			String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
			String screenshotPath = System.getProperty("user.dir") + "/Screenshots/" + timeStamp + ".png";

			File f = new File(screenshotPath);

			if (f.exists()) {
				try {
					Reporter.addScreenCaptureFromPath(screenshotPath, timeStamp);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}

			BaseUtilities.tearDown();

		}

	}

	@After
	public void tearDow(Scenario scenario) {
		if (scenario.isFailed()) {

			final byte[] screenshot = ((TakesScreenshot) BaseUtilities.getDriver()).getScreenshotAs(OutputType.BYTES);
			scenario.embed(screenshot, "image/png");
			System.out.println("Name of the Scenario :" + scenario.getName());

		}

		else if (scenario.getStatus() == "passed") {

			if (scenario.getStatus() == "passed") {
				String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
				String screenshotPath = System.getProperty("user.dir") + "/screenshots/" + timeStamp + ".png";

				File f = new File(screenshotPath);

				if (f.exists()) {
					try {
						Reporter.addScreenCaptureFromPath(screenshotPath, timeStamp);
					} catch (IOException e) {
						e.printStackTrace();
					}
				}

				BaseUtilities.tearDown();
				System.out.println("***************After Scenario executed*****************");

			}

		}

	}
}
